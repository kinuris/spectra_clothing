# Generated by Django 5.2.1 on 2025-05-21 04:00

from django.db import migrations
from django.contrib.auth.hashers import make_password


def create_default_admin_user(apps, schema_editor):
    # Get the user model from the app registry
    User = apps.get_model('accounts', 'User')
    
    # Check if the admin user already exists (to make migration idempotent)
    if not User.objects.filter(username='admin').exists():
        User.objects.create(
            username='admin',
            email='admin@spectrastore.com',
            password=make_password('AdminPassword123!'),  # sets a hashed password
            first_name='Store',
            last_name='Administrator',
            is_staff=True,
            is_superuser=True,
            is_active=True,
            role='admin'
        )


def reverse_default_admin_user(apps, schema_editor):
    # Get the user model from the app registry
    User = apps.get_model('accounts', 'User')
    
    # Delete the admin user if it exists
    User.objects.filter(username='admin').delete()


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(
            create_default_admin_user,
            reverse_default_admin_user
        ),
    ]
